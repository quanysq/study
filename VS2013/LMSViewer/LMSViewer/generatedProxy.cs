//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ILMSService")]
public interface ILMSService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/DoesCustomerExist", ReplyAction="http://tempuri.org/ILMSService/DoesCustomerExistResponse")]
    string DoesCustomerExist(int support_org_id, string primary_org_name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/DoesCustomerExist", ReplyAction="http://tempuri.org/ILMSService/DoesCustomerExistResponse")]
    System.Threading.Tasks.Task<string> DoesCustomerExistAsync(int support_org_id, string primary_org_name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/CreateCustomerOrganization", ReplyAction="http://tempuri.org/ILMSService/CreateCustomerOrganizationResponse")]
    string CreateCustomerOrganization(int support_org_id, string primary_org_name, string support_org_name, string orgContact, int is_trial, int is_temp);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/CreateCustomerOrganization", ReplyAction="http://tempuri.org/ILMSService/CreateCustomerOrganizationResponse")]
    System.Threading.Tasks.Task<string> CreateCustomerOrganizationAsync(int support_org_id, string primary_org_name, string support_org_name, string orgContact, int is_trial, int is_temp);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GenNormalizeLicense", ReplyAction="http://tempuri.org/ILMSService/GenNormalizeLicenseResponse")]
    string GenNormalizeLicense(
                string licenseType, 
                int supportOrgId, 
                string primaryOrgName, 
                string startDateStr, 
                int licenseDuration, 
                int isNCMEnabled, 
                int NCMAssetCount, 
                int isPOFeatureEnabled, 
                int IsFingerprintEnabled, 
                int IsDataMashupEnabled, 
                int isAnalyzeEnabled, 
                int isITDiscoverySourceEnabled, 
                int isAllDiscoverySources, 
                int AllDiscoverySourcesAssetCount, 
                int ASGTrackbird, 
                int Altiris7_0ClientManagementSuite, 
                int Altiris7_1ClientManagementSuiteorhigher, 
                int AltirisClientManagementSuite5and6, 
                int AltirisExpress, 
                int BDNADiscover, 
                int BMCADDM, 
                int BMCBladeLogicClientAutomation, 
                int BMCBladeLogicServerAutomation, 
                int CAITClientManager_ITCM, 
                int CiscoWorksLANManagementSolution_LMS, 
                int DellKACE, 
                int HPClientAutomation, 
                int HPDDMA, 
                int HPDDMI, 
                int HPServerAutomation, 
                int HPUniversalDiscovery, 
                int IBMLicenseMetricTool, 
                int IBMTCM, 
                int IBMTivoliADDM, 
                int IBMTivoliAssetDiscoveryforDistributed, 
                int IBMTivoliAssetDiscoveryforzOS, 
                int IBMTivoliEndpointManager, 
                int JAMFCasper, 
                int LANDesk, 
                int LakesideSysTrack, 
                int Lansweeper, 
                int ManageSoftEnterpriseComplianceManager_ECM, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_7, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_8, 
                int MicrosoftSMS2003, 
                int MicrosoftSCCM2007, 
                int MicrosoftSCCM2012, 
                int NovellZENworks, 
                int OCS, 
                int Other_DatabaseConnection, 
                int Other_File_csv_txt, 
                int Other_NormalizeZipFile, 
                int Scalable, 
                int ServiceNowDiscovery, 
                int VMwarevCenterProtect);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GenNormalizeLicense", ReplyAction="http://tempuri.org/ILMSService/GenNormalizeLicenseResponse")]
    System.Threading.Tasks.Task<string> GenNormalizeLicenseAsync(
                string licenseType, 
                int supportOrgId, 
                string primaryOrgName, 
                string startDateStr, 
                int licenseDuration, 
                int isNCMEnabled, 
                int NCMAssetCount, 
                int isPOFeatureEnabled, 
                int IsFingerprintEnabled, 
                int IsDataMashupEnabled, 
                int isAnalyzeEnabled, 
                int isITDiscoverySourceEnabled, 
                int isAllDiscoverySources, 
                int AllDiscoverySourcesAssetCount, 
                int ASGTrackbird, 
                int Altiris7_0ClientManagementSuite, 
                int Altiris7_1ClientManagementSuiteorhigher, 
                int AltirisClientManagementSuite5and6, 
                int AltirisExpress, 
                int BDNADiscover, 
                int BMCADDM, 
                int BMCBladeLogicClientAutomation, 
                int BMCBladeLogicServerAutomation, 
                int CAITClientManager_ITCM, 
                int CiscoWorksLANManagementSolution_LMS, 
                int DellKACE, 
                int HPClientAutomation, 
                int HPDDMA, 
                int HPDDMI, 
                int HPServerAutomation, 
                int HPUniversalDiscovery, 
                int IBMLicenseMetricTool, 
                int IBMTCM, 
                int IBMTivoliADDM, 
                int IBMTivoliAssetDiscoveryforDistributed, 
                int IBMTivoliAssetDiscoveryforzOS, 
                int IBMTivoliEndpointManager, 
                int JAMFCasper, 
                int LANDesk, 
                int LakesideSysTrack, 
                int Lansweeper, 
                int ManageSoftEnterpriseComplianceManager_ECM, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_7, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_8, 
                int MicrosoftSMS2003, 
                int MicrosoftSCCM2007, 
                int MicrosoftSCCM2012, 
                int NovellZENworks, 
                int OCS, 
                int Other_DatabaseConnection, 
                int Other_File_csv_txt, 
                int Other_NormalizeZipFile, 
                int Scalable, 
                int ServiceNowDiscovery, 
                int VMwarevCenterProtect);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/ObtainNormalizeLicenseDetails", ReplyAction="http://tempuri.org/ILMSService/ObtainNormalizeLicenseDetailsResponse")]
    string ObtainNormalizeLicenseDetails(string licenseKey);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/ObtainNormalizeLicenseDetails", ReplyAction="http://tempuri.org/ILMSService/ObtainNormalizeLicenseDetailsResponse")]
    System.Threading.Tasks.Task<string> ObtainNormalizeLicenseDetailsAsync(string licenseKey);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/CreateTechnopediaSubscription", ReplyAction="http://tempuri.org/ILMSService/CreateTechnopediaSubscriptionResponse")]
    string CreateTechnopediaSubscription(
                int support_org_id, 
                string primary_org_name, 
                int durationDays, 
                int isAllBDNAContentPacks, 
                int isBasicCatalog, 
                int isPremium, 
                int isWindows7Compatibility, 
                int isWindows8Compatibility, 
                int isWindows2003_2012ServerCompatibility, 
                int isVirtualizationTechnologyCompatibility, 
                int isLifecycleAndSupport, 
                int isSftwLicensability, 
                int isCPE, 
                int isIBMLicensing, 
                int isHdwSpecs, 
                int isOSSystemRequirements, 
                int isServiceNow, 
                int isSNVendorMgmt, 
                int isPurchaseOrder, 
                int isTrouxIntegration, 
                int isHWSWPricing, 
                int isTechnopediaFlexeraMapping, 
                int isDejacodeOpensourceSWLicensing);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/CreateTechnopediaSubscription", ReplyAction="http://tempuri.org/ILMSService/CreateTechnopediaSubscriptionResponse")]
    System.Threading.Tasks.Task<string> CreateTechnopediaSubscriptionAsync(
                int support_org_id, 
                string primary_org_name, 
                int durationDays, 
                int isAllBDNAContentPacks, 
                int isBasicCatalog, 
                int isPremium, 
                int isWindows7Compatibility, 
                int isWindows8Compatibility, 
                int isWindows2003_2012ServerCompatibility, 
                int isVirtualizationTechnologyCompatibility, 
                int isLifecycleAndSupport, 
                int isSftwLicensability, 
                int isCPE, 
                int isIBMLicensing, 
                int isHdwSpecs, 
                int isOSSystemRequirements, 
                int isServiceNow, 
                int isSNVendorMgmt, 
                int isPurchaseOrder, 
                int isTrouxIntegration, 
                int isHWSWPricing, 
                int isTechnopediaFlexeraMapping, 
                int isDejacodeOpensourceSWLicensing);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetTechnopediaAuthorizationDetails", ReplyAction="http://tempuri.org/ILMSService/GetTechnopediaAuthorizationDetailsResponse")]
    System.IO.MemoryStream GetTechnopediaAuthorizationDetails(string licenseKey, string customerName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetTechnopediaAuthorizationDetails", ReplyAction="http://tempuri.org/ILMSService/GetTechnopediaAuthorizationDetailsResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetTechnopediaAuthorizationDetailsAsync(string licenseKey, string customerName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetComponentsForFeature", ReplyAction="http://tempuri.org/ILMSService/GetComponentsForFeatureResponse")]
    System.IO.MemoryStream GetComponentsForFeature(string featureName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetComponentsForFeature", ReplyAction="http://tempuri.org/ILMSService/GetComponentsForFeatureResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetComponentsForFeatureAsync(string featureName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllFeatures", ReplyAction="http://tempuri.org/ILMSService/GetAllFeaturesResponse")]
    System.IO.MemoryStream GetAllFeatures();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllFeatures", ReplyAction="http://tempuri.org/ILMSService/GetAllFeaturesResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllFeaturesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllComponents", ReplyAction="http://tempuri.org/ILMSService/GetAllComponentsResponse")]
    System.IO.MemoryStream GetAllComponents();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllComponents", ReplyAction="http://tempuri.org/ILMSService/GetAllComponentsResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllComponentsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllContentPacks", ReplyAction="http://tempuri.org/ILMSService/GetAllContentPacksResponse")]
    System.IO.MemoryStream GetAllContentPacks();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllContentPacks", ReplyAction="http://tempuri.org/ILMSService/GetAllContentPacksResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllContentPacksAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetContentPackDetails", ReplyAction="http://tempuri.org/ILMSService/GetContentPackDetailsResponse")]
    System.IO.MemoryStream GetContentPackDetails(int contentPackId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetContentPackDetails", ReplyAction="http://tempuri.org/ILMSService/GetContentPackDetailsResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetContentPackDetailsAsync(int contentPackId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllCompaniesSubscribedContentPackIds", ReplyAction="http://tempuri.org/ILMSService/GetAllCompaniesSubscribedContentPackIdsResponse")]
    System.IO.MemoryStream GetAllCompaniesSubscribedContentPackIds();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllCompaniesSubscribedContentPackIds", ReplyAction="http://tempuri.org/ILMSService/GetAllCompaniesSubscribedContentPackIdsResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllCompaniesSubscribedContentPackIdsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetSubscribedContentPacks", ReplyAction="http://tempuri.org/ILMSService/GetSubscribedContentPacksResponse")]
    System.IO.MemoryStream GetSubscribedContentPacks(string licenseKey, string customerName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetSubscribedContentPacks", ReplyAction="http://tempuri.org/ILMSService/GetSubscribedContentPacksResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetSubscribedContentPacksAsync(string licenseKey, string customerName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetCompanySubscribedTags", ReplyAction="http://tempuri.org/ILMSService/GetCompanySubscribedTagsResponse")]
    System.IO.MemoryStream GetCompanySubscribedTags(string licenseKey, string customerName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetCompanySubscribedTags", ReplyAction="http://tempuri.org/ILMSService/GetCompanySubscribedTagsResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetCompanySubscribedTagsAsync(string licenseKey, string customerName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllUsers", ReplyAction="http://tempuri.org/ILMSService/GetAllUsersResponse")]
    System.IO.MemoryStream GetAllUsers();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllUsers", ReplyAction="http://tempuri.org/ILMSService/GetAllUsersResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllUsersAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllUsersWithEmail", ReplyAction="http://tempuri.org/ILMSService/GetAllUsersWithEmailResponse")]
    System.IO.MemoryStream GetAllUsersWithEmail();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GetAllUsersWithEmail", ReplyAction="http://tempuri.org/ILMSService/GetAllUsersWithEmailResponse")]
    System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllUsersWithEmailAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GenTechnopediaAPIKeySNVendorMgmt", ReplyAction="http://tempuri.org/ILMSService/GenTechnopediaAPIKeySNVendorMgmtResponse")]
    string GenTechnopediaAPIKeySNVendorMgmt(string userName, string firstName, string lastName, string email);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/GenTechnopediaAPIKeySNVendorMgmt", ReplyAction="http://tempuri.org/ILMSService/GenTechnopediaAPIKeySNVendorMgmtResponse")]
    System.Threading.Tasks.Task<string> GenTechnopediaAPIKeySNVendorMgmtAsync(string userName, string firstName, string lastName, string email);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/ExtendTechnopediaSubscriptionSNVendorMgmt", ReplyAction="http://tempuri.org/ILMSService/ExtendTechnopediaSubscriptionSNVendorMgmtResponse")]
    string ExtendTechnopediaSubscriptionSNVendorMgmt(string apikey);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILMSService/ExtendTechnopediaSubscriptionSNVendorMgmt", ReplyAction="http://tempuri.org/ILMSService/ExtendTechnopediaSubscriptionSNVendorMgmtResponse")]
    System.Threading.Tasks.Task<string> ExtendTechnopediaSubscriptionSNVendorMgmtAsync(string apikey);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ILMSServiceChannel : ILMSService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class LMSServiceClient : System.ServiceModel.ClientBase<ILMSService>, ILMSService
{
    
    public LMSServiceClient()
    {
    }
    
    public LMSServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public LMSServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public LMSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public LMSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string DoesCustomerExist(int support_org_id, string primary_org_name)
    {
        return base.Channel.DoesCustomerExist(support_org_id, primary_org_name);
    }
    
    public System.Threading.Tasks.Task<string> DoesCustomerExistAsync(int support_org_id, string primary_org_name)
    {
        return base.Channel.DoesCustomerExistAsync(support_org_id, primary_org_name);
    }
    
    public string CreateCustomerOrganization(int support_org_id, string primary_org_name, string support_org_name, string orgContact, int is_trial, int is_temp)
    {
        return base.Channel.CreateCustomerOrganization(support_org_id, primary_org_name, support_org_name, orgContact, is_trial, is_temp);
    }
    
    public System.Threading.Tasks.Task<string> CreateCustomerOrganizationAsync(int support_org_id, string primary_org_name, string support_org_name, string orgContact, int is_trial, int is_temp)
    {
        return base.Channel.CreateCustomerOrganizationAsync(support_org_id, primary_org_name, support_org_name, orgContact, is_trial, is_temp);
    }
    
    public string GenNormalizeLicense(
                string licenseType, 
                int supportOrgId, 
                string primaryOrgName, 
                string startDateStr, 
                int licenseDuration, 
                int isNCMEnabled, 
                int NCMAssetCount, 
                int isPOFeatureEnabled, 
                int IsFingerprintEnabled, 
                int IsDataMashupEnabled, 
                int isAnalyzeEnabled, 
                int isITDiscoverySourceEnabled, 
                int isAllDiscoverySources, 
                int AllDiscoverySourcesAssetCount, 
                int ASGTrackbird, 
                int Altiris7_0ClientManagementSuite, 
                int Altiris7_1ClientManagementSuiteorhigher, 
                int AltirisClientManagementSuite5and6, 
                int AltirisExpress, 
                int BDNADiscover, 
                int BMCADDM, 
                int BMCBladeLogicClientAutomation, 
                int BMCBladeLogicServerAutomation, 
                int CAITClientManager_ITCM, 
                int CiscoWorksLANManagementSolution_LMS, 
                int DellKACE, 
                int HPClientAutomation, 
                int HPDDMA, 
                int HPDDMI, 
                int HPServerAutomation, 
                int HPUniversalDiscovery, 
                int IBMLicenseMetricTool, 
                int IBMTCM, 
                int IBMTivoliADDM, 
                int IBMTivoliAssetDiscoveryforDistributed, 
                int IBMTivoliAssetDiscoveryforzOS, 
                int IBMTivoliEndpointManager, 
                int JAMFCasper, 
                int LANDesk, 
                int LakesideSysTrack, 
                int Lansweeper, 
                int ManageSoftEnterpriseComplianceManager_ECM, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_7, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_8, 
                int MicrosoftSMS2003, 
                int MicrosoftSCCM2007, 
                int MicrosoftSCCM2012, 
                int NovellZENworks, 
                int OCS, 
                int Other_DatabaseConnection, 
                int Other_File_csv_txt, 
                int Other_NormalizeZipFile, 
                int Scalable, 
                int ServiceNowDiscovery, 
                int VMwarevCenterProtect)
    {
        return base.Channel.GenNormalizeLicense(licenseType, supportOrgId, primaryOrgName, startDateStr, licenseDuration, isNCMEnabled, NCMAssetCount, isPOFeatureEnabled, IsFingerprintEnabled, IsDataMashupEnabled, isAnalyzeEnabled, isITDiscoverySourceEnabled, isAllDiscoverySources, AllDiscoverySourcesAssetCount, ASGTrackbird, Altiris7_0ClientManagementSuite, Altiris7_1ClientManagementSuiteorhigher, AltirisClientManagementSuite5and6, AltirisExpress, BDNADiscover, BMCADDM, BMCBladeLogicClientAutomation, BMCBladeLogicServerAutomation, CAITClientManager_ITCM, CiscoWorksLANManagementSolution_LMS, DellKACE, HPClientAutomation, HPDDMA, HPDDMI, HPServerAutomation, HPUniversalDiscovery, IBMLicenseMetricTool, IBMTCM, IBMTivoliADDM, IBMTivoliAssetDiscoveryforDistributed, IBMTivoliAssetDiscoveryforzOS, IBMTivoliEndpointManager, JAMFCasper, LANDesk, LakesideSysTrack, Lansweeper, ManageSoftEnterpriseComplianceManager_ECM, MicrosoftAssessmentandPlanningToolkit_MAP_7, MicrosoftAssessmentandPlanningToolkit_MAP_8, MicrosoftSMS2003, MicrosoftSCCM2007, MicrosoftSCCM2012, NovellZENworks, OCS, Other_DatabaseConnection, Other_File_csv_txt, Other_NormalizeZipFile, Scalable, ServiceNowDiscovery, VMwarevCenterProtect);
    }
    
    public System.Threading.Tasks.Task<string> GenNormalizeLicenseAsync(
                string licenseType, 
                int supportOrgId, 
                string primaryOrgName, 
                string startDateStr, 
                int licenseDuration, 
                int isNCMEnabled, 
                int NCMAssetCount, 
                int isPOFeatureEnabled, 
                int IsFingerprintEnabled, 
                int IsDataMashupEnabled, 
                int isAnalyzeEnabled, 
                int isITDiscoverySourceEnabled, 
                int isAllDiscoverySources, 
                int AllDiscoverySourcesAssetCount, 
                int ASGTrackbird, 
                int Altiris7_0ClientManagementSuite, 
                int Altiris7_1ClientManagementSuiteorhigher, 
                int AltirisClientManagementSuite5and6, 
                int AltirisExpress, 
                int BDNADiscover, 
                int BMCADDM, 
                int BMCBladeLogicClientAutomation, 
                int BMCBladeLogicServerAutomation, 
                int CAITClientManager_ITCM, 
                int CiscoWorksLANManagementSolution_LMS, 
                int DellKACE, 
                int HPClientAutomation, 
                int HPDDMA, 
                int HPDDMI, 
                int HPServerAutomation, 
                int HPUniversalDiscovery, 
                int IBMLicenseMetricTool, 
                int IBMTCM, 
                int IBMTivoliADDM, 
                int IBMTivoliAssetDiscoveryforDistributed, 
                int IBMTivoliAssetDiscoveryforzOS, 
                int IBMTivoliEndpointManager, 
                int JAMFCasper, 
                int LANDesk, 
                int LakesideSysTrack, 
                int Lansweeper, 
                int ManageSoftEnterpriseComplianceManager_ECM, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_7, 
                int MicrosoftAssessmentandPlanningToolkit_MAP_8, 
                int MicrosoftSMS2003, 
                int MicrosoftSCCM2007, 
                int MicrosoftSCCM2012, 
                int NovellZENworks, 
                int OCS, 
                int Other_DatabaseConnection, 
                int Other_File_csv_txt, 
                int Other_NormalizeZipFile, 
                int Scalable, 
                int ServiceNowDiscovery, 
                int VMwarevCenterProtect)
    {
        return base.Channel.GenNormalizeLicenseAsync(licenseType, supportOrgId, primaryOrgName, startDateStr, licenseDuration, isNCMEnabled, NCMAssetCount, isPOFeatureEnabled, IsFingerprintEnabled, IsDataMashupEnabled, isAnalyzeEnabled, isITDiscoverySourceEnabled, isAllDiscoverySources, AllDiscoverySourcesAssetCount, ASGTrackbird, Altiris7_0ClientManagementSuite, Altiris7_1ClientManagementSuiteorhigher, AltirisClientManagementSuite5and6, AltirisExpress, BDNADiscover, BMCADDM, BMCBladeLogicClientAutomation, BMCBladeLogicServerAutomation, CAITClientManager_ITCM, CiscoWorksLANManagementSolution_LMS, DellKACE, HPClientAutomation, HPDDMA, HPDDMI, HPServerAutomation, HPUniversalDiscovery, IBMLicenseMetricTool, IBMTCM, IBMTivoliADDM, IBMTivoliAssetDiscoveryforDistributed, IBMTivoliAssetDiscoveryforzOS, IBMTivoliEndpointManager, JAMFCasper, LANDesk, LakesideSysTrack, Lansweeper, ManageSoftEnterpriseComplianceManager_ECM, MicrosoftAssessmentandPlanningToolkit_MAP_7, MicrosoftAssessmentandPlanningToolkit_MAP_8, MicrosoftSMS2003, MicrosoftSCCM2007, MicrosoftSCCM2012, NovellZENworks, OCS, Other_DatabaseConnection, Other_File_csv_txt, Other_NormalizeZipFile, Scalable, ServiceNowDiscovery, VMwarevCenterProtect);
    }
    
    public string ObtainNormalizeLicenseDetails(string licenseKey)
    {
        return base.Channel.ObtainNormalizeLicenseDetails(licenseKey);
    }
    
    public System.Threading.Tasks.Task<string> ObtainNormalizeLicenseDetailsAsync(string licenseKey)
    {
        return base.Channel.ObtainNormalizeLicenseDetailsAsync(licenseKey);
    }
    
    public string CreateTechnopediaSubscription(
                int support_org_id, 
                string primary_org_name, 
                int durationDays, 
                int isAllBDNAContentPacks, 
                int isBasicCatalog, 
                int isPremium, 
                int isWindows7Compatibility, 
                int isWindows8Compatibility, 
                int isWindows2003_2012ServerCompatibility, 
                int isVirtualizationTechnologyCompatibility, 
                int isLifecycleAndSupport, 
                int isSftwLicensability, 
                int isCPE, 
                int isIBMLicensing, 
                int isHdwSpecs, 
                int isOSSystemRequirements, 
                int isServiceNow, 
                int isSNVendorMgmt, 
                int isPurchaseOrder, 
                int isTrouxIntegration, 
                int isHWSWPricing, 
                int isTechnopediaFlexeraMapping, 
                int isDejacodeOpensourceSWLicensing)
    {
        return base.Channel.CreateTechnopediaSubscription(support_org_id, primary_org_name, durationDays, isAllBDNAContentPacks, isBasicCatalog, isPremium, isWindows7Compatibility, isWindows8Compatibility, isWindows2003_2012ServerCompatibility, isVirtualizationTechnologyCompatibility, isLifecycleAndSupport, isSftwLicensability, isCPE, isIBMLicensing, isHdwSpecs, isOSSystemRequirements, isServiceNow, isSNVendorMgmt, isPurchaseOrder, isTrouxIntegration, isHWSWPricing, isTechnopediaFlexeraMapping, isDejacodeOpensourceSWLicensing);
    }
    
    public System.Threading.Tasks.Task<string> CreateTechnopediaSubscriptionAsync(
                int support_org_id, 
                string primary_org_name, 
                int durationDays, 
                int isAllBDNAContentPacks, 
                int isBasicCatalog, 
                int isPremium, 
                int isWindows7Compatibility, 
                int isWindows8Compatibility, 
                int isWindows2003_2012ServerCompatibility, 
                int isVirtualizationTechnologyCompatibility, 
                int isLifecycleAndSupport, 
                int isSftwLicensability, 
                int isCPE, 
                int isIBMLicensing, 
                int isHdwSpecs, 
                int isOSSystemRequirements, 
                int isServiceNow, 
                int isSNVendorMgmt, 
                int isPurchaseOrder, 
                int isTrouxIntegration, 
                int isHWSWPricing, 
                int isTechnopediaFlexeraMapping, 
                int isDejacodeOpensourceSWLicensing)
    {
        return base.Channel.CreateTechnopediaSubscriptionAsync(support_org_id, primary_org_name, durationDays, isAllBDNAContentPacks, isBasicCatalog, isPremium, isWindows7Compatibility, isWindows8Compatibility, isWindows2003_2012ServerCompatibility, isVirtualizationTechnologyCompatibility, isLifecycleAndSupport, isSftwLicensability, isCPE, isIBMLicensing, isHdwSpecs, isOSSystemRequirements, isServiceNow, isSNVendorMgmt, isPurchaseOrder, isTrouxIntegration, isHWSWPricing, isTechnopediaFlexeraMapping, isDejacodeOpensourceSWLicensing);
    }
    
    public System.IO.MemoryStream GetTechnopediaAuthorizationDetails(string licenseKey, string customerName)
    {
        return base.Channel.GetTechnopediaAuthorizationDetails(licenseKey, customerName);
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetTechnopediaAuthorizationDetailsAsync(string licenseKey, string customerName)
    {
        return base.Channel.GetTechnopediaAuthorizationDetailsAsync(licenseKey, customerName);
    }
    
    public System.IO.MemoryStream GetComponentsForFeature(string featureName)
    {
        return base.Channel.GetComponentsForFeature(featureName);
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetComponentsForFeatureAsync(string featureName)
    {
        return base.Channel.GetComponentsForFeatureAsync(featureName);
    }
    
    public System.IO.MemoryStream GetAllFeatures()
    {
        return base.Channel.GetAllFeatures();
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllFeaturesAsync()
    {
        return base.Channel.GetAllFeaturesAsync();
    }
    
    public System.IO.MemoryStream GetAllComponents()
    {
        return base.Channel.GetAllComponents();
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllComponentsAsync()
    {
        return base.Channel.GetAllComponentsAsync();
    }
    
    public System.IO.MemoryStream GetAllContentPacks()
    {
        return base.Channel.GetAllContentPacks();
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllContentPacksAsync()
    {
        return base.Channel.GetAllContentPacksAsync();
    }
    
    public System.IO.MemoryStream GetContentPackDetails(int contentPackId)
    {
        return base.Channel.GetContentPackDetails(contentPackId);
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetContentPackDetailsAsync(int contentPackId)
    {
        return base.Channel.GetContentPackDetailsAsync(contentPackId);
    }
    
    public System.IO.MemoryStream GetAllCompaniesSubscribedContentPackIds()
    {
        return base.Channel.GetAllCompaniesSubscribedContentPackIds();
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllCompaniesSubscribedContentPackIdsAsync()
    {
        return base.Channel.GetAllCompaniesSubscribedContentPackIdsAsync();
    }
    
    public System.IO.MemoryStream GetSubscribedContentPacks(string licenseKey, string customerName)
    {
        return base.Channel.GetSubscribedContentPacks(licenseKey, customerName);
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetSubscribedContentPacksAsync(string licenseKey, string customerName)
    {
        return base.Channel.GetSubscribedContentPacksAsync(licenseKey, customerName);
    }
    
    public System.IO.MemoryStream GetCompanySubscribedTags(string licenseKey, string customerName)
    {
        return base.Channel.GetCompanySubscribedTags(licenseKey, customerName);
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetCompanySubscribedTagsAsync(string licenseKey, string customerName)
    {
        return base.Channel.GetCompanySubscribedTagsAsync(licenseKey, customerName);
    }
    
    public System.IO.MemoryStream GetAllUsers()
    {
        return base.Channel.GetAllUsers();
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllUsersAsync()
    {
        return base.Channel.GetAllUsersAsync();
    }
    
    public System.IO.MemoryStream GetAllUsersWithEmail()
    {
        return base.Channel.GetAllUsersWithEmail();
    }
    
    public System.Threading.Tasks.Task<System.IO.MemoryStream> GetAllUsersWithEmailAsync()
    {
        return base.Channel.GetAllUsersWithEmailAsync();
    }
    
    public string GenTechnopediaAPIKeySNVendorMgmt(string userName, string firstName, string lastName, string email)
    {
        return base.Channel.GenTechnopediaAPIKeySNVendorMgmt(userName, firstName, lastName, email);
    }
    
    public System.Threading.Tasks.Task<string> GenTechnopediaAPIKeySNVendorMgmtAsync(string userName, string firstName, string lastName, string email)
    {
        return base.Channel.GenTechnopediaAPIKeySNVendorMgmtAsync(userName, firstName, lastName, email);
    }
    
    public string ExtendTechnopediaSubscriptionSNVendorMgmt(string apikey)
    {
        return base.Channel.ExtendTechnopediaSubscriptionSNVendorMgmt(apikey);
    }
    
    public System.Threading.Tasks.Task<string> ExtendTechnopediaSubscriptionSNVendorMgmtAsync(string apikey)
    {
        return base.Channel.ExtendTechnopediaSubscriptionSNVendorMgmtAsync(apikey);
    }
}
